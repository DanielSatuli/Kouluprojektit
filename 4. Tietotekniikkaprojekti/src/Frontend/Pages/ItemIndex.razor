@page "/{Id}"
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.WebAssembly.Services
@using SharedLib
@inject HttpClient http
@inject NavigationManager navManager

<style>
    @@media (min-width: 400px) {
        .item-container {
            grid-template-columns: repeat(1, 1fr);
        }

        .item-container {
            max-width: 1600px;
            margin: 10px auto;
            display: grid;
        }

        .accept {
            background-color: #00A300;
            border-color: #00A300;
            color: white;
            padding: 15px;
            width: 345px;
        }

        .btn-primary {
            padding: 15px;
            width: 345px;
        }
    }
</style>

<PageTitle>Lisätiedot</PageTitle>
<h3>Lisätiedot</h3>

@if (item == null)
{
    <p>Ladataan...</p>
}
else
{
    <div class="item-container">
        <p>Virhe ID: @item.Id</p>
        <p style="font-size: 18px; font-weight: bold;">@item.Error</p>
        <p>Virhe: @item.Description</p>
        <p>Aika: @DateTime.Parse(item.When).ToString("dd-MM-yyyy HH:mm:ss")</p>
    </div>
    <div>
        <a href="/" class="btn btn-primary">←Takaisin</a>
        <a class="btn accept" @onclick="Archive"> Hyväksy ja arkistoi</a>
    </div>
}

@code {
    [Parameter]
    public string Id { get; set; }

    public ItemDTO item { get; set; }
    protected override async Task OnInitializedAsync()
    {
        item = await http.GetFromJsonAsync<ItemDTO>($"/items/item/id/{Id}");
    }
    protected async void Archive()
    {
        try
        {
            ItemDTO newItem = new()
                {
                    Id = item.Id,
                    Error = item.Error,
                    Description = item.Description,
                    When = item.When
                };
            var response = await http.PostAsJsonAsync($"/history/{Id}", newItem);
            var delete = await http.DeleteAsync($"/items/item/{Id}");

            navManager.NavigateTo("/");
        }
        catch (Exception)
        {
            
            throw;
        }
    }
}